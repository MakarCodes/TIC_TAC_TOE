*, *::after, *::before {
    box-sizing: border-box;
}

:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * 0.8);
}

@font-face {
    src: url(PatrickHand-Regular.ttf);
    font-family: patrickHandFont;
}

body {
    margin: 0;
    font-family: patrickHandFont;
}

header{
    height: 140px;
}

header h1 {
    text-align: center;
    font-size: 100px;
    margin: 0;
    color: white;
    background-color: black;
    opacity: 0.9;
}

.player-choice {
    width: 70%;
    margin: 40px auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.player-choice p {
    font-size: 20px;
    display: block;
    margin: 10px auto;
}

.player-choice.active-game {
    display: none;
}

.name-section {
    flex: 1 1 100%;
    display: flex;
    justify-content: space-around;
    margin-bottom: 20px;
}

.buttons {
    flex: 1 1 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-column-gap: 8px;
    margin-bottom: 10px;
}

button {
    font-size: 1.1rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

button.clicked {
    background-color: black;
    color: white;
}

button:hover {
    background-color: black;
    color: white;
    border-color: white;
}

input {
    font-size: 1.1rem;
    padding: .25em .5em;
    cursor: pointer;
}

label {
    font-size: 1.1rem;
}

#start-game {
    margin-top: 30px;
    font-size: 1.5rem;
    padding: .25em .5em;
    cursor: pointer;
}
.game-board-container {
    width: 100%;
}

/* game-board-container is just after container containing .active-game class and will be diplayed after activating this class */
.active-game + .game-board-container {
    height: calc(100vh - 140px);
    display: flex;
    justify-content: center;
    align-items: center;
}

.board {
    width: 100%;
    display: grid;
    justify-content: center;
    align-content: center; 
    grid-template-columns: repeat(3, auto);  
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: solid 1px black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.cell:nth-child(3n+1) {
    border-left: none;
}

.cell:nth-child(3n+3) {
    border-right: none;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:last-child,
.cell:nth-child(7),
.cell:nth-child(8) {
    border-bottom: none;
}

/* changing cursor after hovering on the X or O */

.cell.x,
.cell.circle {
    cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before,
.cell.circle::after {
    background-color: black;
}


/* adding hover affect when the player is on the move */

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.circle):not(.x):hover::after,
.board.circle .cell:not(.circle):not(.x):hover::before {
    background-color: lightgray;
}

/* creating the shape of X */
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
    transform: rotate(135deg);
}


/* creating the shape of O */
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.circle):not(.x):hover::before, 
.board.circle .cell:not(.circle):not(.x):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
}

.cell.circle::before,
.board.circle .cell:not(.circle):not(.x):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.circle):not(.x):hover::after {
    width: calc(var(--mark-size) * 0.7);
    height: calc(var(--mark-size) * 0.7);
    background-color: white;
}

.winning-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0, .9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover {
    background-color: black;
    color: white;
    border-color: white;
}

.winning-message.show {
    display: flex;
}

#restartButton {
    margin-bottom: 15px;
}

#message-alert-one, #message-alert-two {
    display: block;
    width: 100%;
}
.alert-row {
    background-color: red;
    color: white;
    text-align: center;
    padding: 2px;
}




